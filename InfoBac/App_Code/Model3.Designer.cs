//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DatabaseModel2", "FK_Domains_ToTable", "Domains", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DatabaseModel2.Domain), "Domains1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseModel2.Domain), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel2", "FK_DomainsWeights_ToTable_1", "Domains", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseModel2.Domain), "DomainsWeights", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseModel2.DomainsWeight), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel2", "FK_Questions_ToTable", "Domains", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseModel2.Domain), "Questions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseModel2.Question), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel2", "FK_DomainsWeights_ToTable", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseModel2.User), "DomainsWeights", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseModel2.DomainsWeight), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel2", "FK_QuestionsWeights_ToTable_1", "Questions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseModel2.Question), "QuestionsWeights", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseModel2.QuestionsWeight), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel2", "FK_QuestionsWeights_ToTable", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseModel2.User), "QuestionsWeights", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseModel2.QuestionsWeight), true)]

#endregion

namespace DatabaseModel2
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DatabaseEntities2 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DatabaseEntities2 object using the connection string found in the 'DatabaseEntities2' section of the application configuration file.
        /// </summary>
        public DatabaseEntities2() : base("name=DatabaseEntities2", "DatabaseEntities2")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DatabaseEntities2 object.
        /// </summary>
        public DatabaseEntities2(string connectionString) : base(connectionString, "DatabaseEntities2")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DatabaseEntities2 object.
        /// </summary>
        public DatabaseEntities2(EntityConnection connection) : base(connection, "DatabaseEntities2")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Domain> Domains
        {
            get
            {
                if ((_Domains == null))
                {
                    _Domains = base.CreateObjectSet<Domain>("Domains");
                }
                return _Domains;
            }
        }
        private ObjectSet<Domain> _Domains;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DomainsWeight> DomainsWeights
        {
            get
            {
                if ((_DomainsWeights == null))
                {
                    _DomainsWeights = base.CreateObjectSet<DomainsWeight>("DomainsWeights");
                }
                return _DomainsWeights;
            }
        }
        private ObjectSet<DomainsWeight> _DomainsWeights;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Question> Questions
        {
            get
            {
                if ((_Questions == null))
                {
                    _Questions = base.CreateObjectSet<Question>("Questions");
                }
                return _Questions;
            }
        }
        private ObjectSet<Question> _Questions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuestionsWeight> QuestionsWeights
        {
            get
            {
                if ((_QuestionsWeights == null))
                {
                    _QuestionsWeights = base.CreateObjectSet<QuestionsWeight>("QuestionsWeights");
                }
                return _QuestionsWeights;
            }
        }
        private ObjectSet<QuestionsWeight> _QuestionsWeights;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Domains EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDomains(Domain domain)
        {
            base.AddObject("Domains", domain);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DomainsWeights EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDomainsWeights(DomainsWeight domainsWeight)
        {
            base.AddObject("DomainsWeights", domainsWeight);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Questions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestions(Question question)
        {
            base.AddObject("Questions", question);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuestionsWeights EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestionsWeights(QuestionsWeight questionsWeight)
        {
            base.AddObject("QuestionsWeights", questionsWeight);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel2", Name="Domain")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Domain : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Domain object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Domain CreateDomain(global::System.Int32 id, global::System.String name)
        {
            Domain domain = new Domain();
            domain.Id = id;
            domain.Name = name;
            return domain;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MasterDomain
        {
            get
            {
                return _MasterDomain;
            }
            set
            {
                OnMasterDomainChanging(value);
                ReportPropertyChanging("MasterDomain");
                _MasterDomain = StructuralObject.SetValidValue(value, "MasterDomain");
                ReportPropertyChanged("MasterDomain");
                OnMasterDomainChanged();
            }
        }
        private Nullable<global::System.Int32> _MasterDomain;
        partial void OnMasterDomainChanging(Nullable<global::System.Int32> value);
        partial void OnMasterDomainChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel2", "FK_Domains_ToTable", "Domains1")]
        public EntityCollection<Domain> Domains1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Domain>("DatabaseModel2.FK_Domains_ToTable", "Domains1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Domain>("DatabaseModel2.FK_Domains_ToTable", "Domains1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel2", "FK_Domains_ToTable", "Domains")]
        public Domain Domain1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain>("DatabaseModel2.FK_Domains_ToTable", "Domains").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain>("DatabaseModel2.FK_Domains_ToTable", "Domains").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Domain> Domain1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain>("DatabaseModel2.FK_Domains_ToTable", "Domains");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Domain>("DatabaseModel2.FK_Domains_ToTable", "Domains", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel2", "FK_DomainsWeights_ToTable_1", "DomainsWeights")]
        public EntityCollection<DomainsWeight> DomainsWeights
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DomainsWeight>("DatabaseModel2.FK_DomainsWeights_ToTable_1", "DomainsWeights");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DomainsWeight>("DatabaseModel2.FK_DomainsWeights_ToTable_1", "DomainsWeights", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel2", "FK_Questions_ToTable", "Questions")]
        public EntityCollection<Question> Questions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Question>("DatabaseModel2.FK_Questions_ToTable", "Questions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Question>("DatabaseModel2.FK_Questions_ToTable", "Questions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel2", Name="DomainsWeight")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DomainsWeight : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DomainsWeight object.
        /// </summary>
        /// <param name="user">Initial value of the User property.</param>
        /// <param name="domain">Initial value of the Domain property.</param>
        /// <param name="weight">Initial value of the Weight property.</param>
        public static DomainsWeight CreateDomainsWeight(global::System.Int32 user, global::System.Int32 domain, global::System.Single weight)
        {
            DomainsWeight domainsWeight = new DomainsWeight();
            domainsWeight.User = user;
            domainsWeight.Domain = domain;
            domainsWeight.Weight = weight;
            return domainsWeight;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 User
        {
            get
            {
                return _User;
            }
            set
            {
                if (_User != value)
                {
                    OnUserChanging(value);
                    ReportPropertyChanging("User");
                    _User = StructuralObject.SetValidValue(value, "User");
                    ReportPropertyChanged("User");
                    OnUserChanged();
                }
            }
        }
        private global::System.Int32 _User;
        partial void OnUserChanging(global::System.Int32 value);
        partial void OnUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Domain
        {
            get
            {
                return _Domain;
            }
            set
            {
                if (_Domain != value)
                {
                    OnDomainChanging(value);
                    ReportPropertyChanging("Domain");
                    _Domain = StructuralObject.SetValidValue(value, "Domain");
                    ReportPropertyChanged("Domain");
                    OnDomainChanged();
                }
            }
        }
        private global::System.Int32 _Domain;
        partial void OnDomainChanging(global::System.Int32 value);
        partial void OnDomainChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value, "Weight");
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private global::System.Single _Weight;
        partial void OnWeightChanging(global::System.Single value);
        partial void OnWeightChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel2", "FK_DomainsWeights_ToTable_1", "Domains")]
        public Domain Domain1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain>("DatabaseModel2.FK_DomainsWeights_ToTable_1", "Domains").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain>("DatabaseModel2.FK_DomainsWeights_ToTable_1", "Domains").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Domain> Domain1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain>("DatabaseModel2.FK_DomainsWeights_ToTable_1", "Domains");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Domain>("DatabaseModel2.FK_DomainsWeights_ToTable_1", "Domains", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel2", "FK_DomainsWeights_ToTable", "Users")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DatabaseModel2.FK_DomainsWeights_ToTable", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DatabaseModel2.FK_DomainsWeights_ToTable", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DatabaseModel2.FK_DomainsWeights_ToTable", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DatabaseModel2.FK_DomainsWeights_ToTable", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel2", Name="Question")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Question : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Question object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="question1">Initial value of the Question1 property.</param>
        /// <param name="answer">Initial value of the Answer property.</param>
        /// <param name="domain">Initial value of the Domain property.</param>
        public static Question CreateQuestion(global::System.Int32 id, global::System.String question1, global::System.String answer, global::System.Int32 domain)
        {
            Question question = new Question();
            question.Id = id;
            question.Question1 = question1;
            question.Answer = answer;
            question.Domain = domain;
            return question;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Question1
        {
            get
            {
                return _Question1;
            }
            set
            {
                OnQuestion1Changing(value);
                ReportPropertyChanging("Question1");
                _Question1 = StructuralObject.SetValidValue(value, false, "Question1");
                ReportPropertyChanged("Question1");
                OnQuestion1Changed();
            }
        }
        private global::System.String _Question1;
        partial void OnQuestion1Changing(global::System.String value);
        partial void OnQuestion1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Answer
        {
            get
            {
                return _Answer;
            }
            set
            {
                OnAnswerChanging(value);
                ReportPropertyChanging("Answer");
                _Answer = StructuralObject.SetValidValue(value, false, "Answer");
                ReportPropertyChanged("Answer");
                OnAnswerChanged();
            }
        }
        private global::System.String _Answer;
        partial void OnAnswerChanging(global::System.String value);
        partial void OnAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Domain
        {
            get
            {
                return _Domain;
            }
            set
            {
                OnDomainChanging(value);
                ReportPropertyChanging("Domain");
                _Domain = StructuralObject.SetValidValue(value, "Domain");
                ReportPropertyChanged("Domain");
                OnDomainChanged();
            }
        }
        private global::System.Int32 _Domain;
        partial void OnDomainChanging(global::System.Int32 value);
        partial void OnDomainChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel2", "FK_Questions_ToTable", "Domains")]
        public Domain Domain1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain>("DatabaseModel2.FK_Questions_ToTable", "Domains").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain>("DatabaseModel2.FK_Questions_ToTable", "Domains").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Domain> Domain1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain>("DatabaseModel2.FK_Questions_ToTable", "Domains");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Domain>("DatabaseModel2.FK_Questions_ToTable", "Domains", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel2", "FK_QuestionsWeights_ToTable_1", "QuestionsWeights")]
        public EntityCollection<QuestionsWeight> QuestionsWeights
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuestionsWeight>("DatabaseModel2.FK_QuestionsWeights_ToTable_1", "QuestionsWeights");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuestionsWeight>("DatabaseModel2.FK_QuestionsWeights_ToTable_1", "QuestionsWeights", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel2", Name="QuestionsWeight")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuestionsWeight : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuestionsWeight object.
        /// </summary>
        /// <param name="user">Initial value of the User property.</param>
        /// <param name="question">Initial value of the Question property.</param>
        /// <param name="weight">Initial value of the Weight property.</param>
        public static QuestionsWeight CreateQuestionsWeight(global::System.Int32 user, global::System.Int32 question, global::System.Single weight)
        {
            QuestionsWeight questionsWeight = new QuestionsWeight();
            questionsWeight.User = user;
            questionsWeight.Question = question;
            questionsWeight.Weight = weight;
            return questionsWeight;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 User
        {
            get
            {
                return _User;
            }
            set
            {
                if (_User != value)
                {
                    OnUserChanging(value);
                    ReportPropertyChanging("User");
                    _User = StructuralObject.SetValidValue(value, "User");
                    ReportPropertyChanged("User");
                    OnUserChanged();
                }
            }
        }
        private global::System.Int32 _User;
        partial void OnUserChanging(global::System.Int32 value);
        partial void OnUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Question
        {
            get
            {
                return _Question;
            }
            set
            {
                if (_Question != value)
                {
                    OnQuestionChanging(value);
                    ReportPropertyChanging("Question");
                    _Question = StructuralObject.SetValidValue(value, "Question");
                    ReportPropertyChanged("Question");
                    OnQuestionChanged();
                }
            }
        }
        private global::System.Int32 _Question;
        partial void OnQuestionChanging(global::System.Int32 value);
        partial void OnQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value, "Weight");
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private global::System.Single _Weight;
        partial void OnWeightChanging(global::System.Single value);
        partial void OnWeightChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel2", "FK_QuestionsWeights_ToTable_1", "Questions")]
        public Question Question1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("DatabaseModel2.FK_QuestionsWeights_ToTable_1", "Questions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("DatabaseModel2.FK_QuestionsWeights_ToTable_1", "Questions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Question> Question1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("DatabaseModel2.FK_QuestionsWeights_ToTable_1", "Questions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Question>("DatabaseModel2.FK_QuestionsWeights_ToTable_1", "Questions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel2", "FK_QuestionsWeights_ToTable", "Users")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DatabaseModel2.FK_QuestionsWeights_ToTable", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DatabaseModel2.FK_QuestionsWeights_ToTable", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DatabaseModel2.FK_QuestionsWeights_ToTable", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DatabaseModel2.FK_QuestionsWeights_ToTable", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel2", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="passwrod">Initial value of the Passwrod property.</param>
        /// <param name="admin">Initial value of the Admin property.</param>
        /// <param name="confirmed">Initial value of the Confirmed property.</param>
        /// <param name="note">Initial value of the Note property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String userName, global::System.String email, global::System.String passwrod, global::System.Boolean admin, global::System.String confirmed, global::System.Int32 note)
        {
            User user = new User();
            user.Id = id;
            user.UserName = userName;
            user.Email = email;
            user.Passwrod = passwrod;
            user.Admin = admin;
            user.Confirmed = confirmed;
            user.Note = note;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Passwrod
        {
            get
            {
                return _Passwrod;
            }
            set
            {
                OnPasswrodChanging(value);
                ReportPropertyChanging("Passwrod");
                _Passwrod = StructuralObject.SetValidValue(value, false, "Passwrod");
                ReportPropertyChanged("Passwrod");
                OnPasswrodChanged();
            }
        }
        private global::System.String _Passwrod;
        partial void OnPasswrodChanging(global::System.String value);
        partial void OnPasswrodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Admin
        {
            get
            {
                return _Admin;
            }
            set
            {
                OnAdminChanging(value);
                ReportPropertyChanging("Admin");
                _Admin = StructuralObject.SetValidValue(value, "Admin");
                ReportPropertyChanged("Admin");
                OnAdminChanged();
            }
        }
        private global::System.Boolean _Admin;
        partial void OnAdminChanging(global::System.Boolean value);
        partial void OnAdminChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Confirmed
        {
            get
            {
                return _Confirmed;
            }
            set
            {
                OnConfirmedChanging(value);
                ReportPropertyChanging("Confirmed");
                _Confirmed = StructuralObject.SetValidValue(value, false, "Confirmed");
                ReportPropertyChanged("Confirmed");
                OnConfirmedChanged();
            }
        }
        private global::System.String _Confirmed;
        partial void OnConfirmedChanging(global::System.String value);
        partial void OnConfirmedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, "Note");
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.Int32 _Note;
        partial void OnNoteChanging(global::System.Int32 value);
        partial void OnNoteChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel2", "FK_DomainsWeights_ToTable", "DomainsWeights")]
        public EntityCollection<DomainsWeight> DomainsWeights
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DomainsWeight>("DatabaseModel2.FK_DomainsWeights_ToTable", "DomainsWeights");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DomainsWeight>("DatabaseModel2.FK_DomainsWeights_ToTable", "DomainsWeights", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel2", "FK_QuestionsWeights_ToTable", "QuestionsWeights")]
        public EntityCollection<QuestionsWeight> QuestionsWeights
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuestionsWeight>("DatabaseModel2.FK_QuestionsWeights_ToTable", "QuestionsWeights");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuestionsWeight>("DatabaseModel2.FK_QuestionsWeights_ToTable", "QuestionsWeights", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
